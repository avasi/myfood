@model myfoodapp.Hub.Models.EventViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    window.onload = function onLoad(e) {

        var Events = $("#Events").data("kendoGrid");

        var productionUnitId = $('#routeDataId').val();

        Events.dataSource.read({ id: productionUnitId });       
    }

    function onBackClick() {
        var productionUnitId = $('#routeDataId').val();
        window.location = window.location.origin + "/ProductionUnits/Details/" + productionUnitId;
    }
</script>

<input type="hidden" value='@ViewContext.RouteData.Values["id"]' id="routeDataId" />

<div id="main-section-header" class="row">
    <h2 id="title" class="col-md-3">[[[Production Units Management]]]</h2>
    <div style="clear:both;"></div>
</div>

<div id="productionUnits-grid" class="main-section-content row">
    <div id="productionUnits-details" class="col-md-2">
        <h3 class="section-header">[[[Manage Production Unit Events]]]</h3>
        <br />

        <p>
            @(Html.Kendo().Button()
            .Name("backButton")
            .HtmlAttributes(new { @class = "toggleButton btn-block", @style = "height: 50px; color: #FFFFFF; background-color: #018001;" })
            .Content("[[[Back to Details]]]")
            .Events(ev => ev.Click("onBackClick")))
        </p>

    </div>
    <div id="grid-container" class="col-md-10" style="padding-bottom:40px">
        @(Html.Kendo().Grid<myfoodapp.Hub.Models.EventViewModel>()
        .Name("Events")
        .Columns(columns =>
        {
            columns.ForeignKey(c => c.eventTypeId, (System.Collections.IEnumerable)ViewData["eventTypes"], "Id", "name").Title("[[[type]]]").Width(60);
            columns.Bound(c => c.date).Format("{0:d}").Width(80).Sortable(true);
            columns.Bound(c => c.description).Width(250);
            columns.Bound(c => c.isOpen).Title("[[[open]]]").Width(50);
            columns.Bound(c => c.createdBy).Width(100);
            columns.Command(command => { command.Edit(); command.Destroy(); }).Width(150);
        })
        .ToolBar(toolbar =>
        {
           // toolbar.Save();
        })
        .HtmlAttributes(new { style = "height: 80vh" })
        .Editable(editable => editable.Mode(GridEditMode.PopUp).Window(w => w.Width(700)).TemplateName("Event"))
        .Scrollable()
        .Filterable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model =>
            {
                model.Id(c => c.Id);
                model.Field(c => c.Id).Editable(false);
                model.Field(c => c.date).Editable(true);
                model.Field(c => c.description).Editable(true);
                model.Field(c => c.createdBy).Editable(false);
            })
            .Events(events => events.Error("error_handler"))
            .Read("Event_Read", "Events", new { Id = this.ViewContext.RouteData.Values["id"] })
            .Update("Event_Update", "Events")
            .Destroy("Event_Destroy", "Events")
        )
        )
    </div>
</div>

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var measure = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        measure += this + "\n";
                    });
                }
            });
            alert(measure);
        }
    }
</script>
   
<style>
        @@media screen and (max-width: 800px) {

        .k-widget.k-window  {
            width:100% !important;
            height:90% !important;
        }

        }

        .k-button {
            background-color: #018001;
            color: #ffffff;
        }

        .k-grid-edit span.k-icon {
            display:none;
        }

        .k-grid-delete span.k-icon {
            display:none;
        }
</style>

